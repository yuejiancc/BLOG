{
    "version": "https://jsonfeed.org/version/1",
    "title": "月见的瞎叨叨 • All posts by \"学校\" tag",
    "description": "",
    "home_page_url": "https://blog.yuejian.fun",
    "items": [
        {
            "id": "https://blog.yuejian.fun/2021/11/09/%E6%B5%85%E8%B0%88%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%AE%A4%E8%AF%81%E5%8E%9F%E7%90%86-%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95/",
            "url": "https://blog.yuejian.fun/2021/11/09/%E6%B5%85%E8%B0%88%E6%A0%A1%E5%9B%AD%E7%BD%91%E8%AE%A4%E8%AF%81%E5%8E%9F%E7%90%86-%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95/",
            "title": "浅谈校园网认证原理&多设备共享方法",
            "date_published": "2021-11-09T05:03:39.000Z",
            "content_html": "<p>前言</p>\n<blockquote>\n<p>这里以我的学校为例，大多数学校也是一样的方案<br />\n我们学校 WIFI 采用 WebPortal 认证，有线网络也接入了 WebPortal 认证，不过主要采用的是 Drcom 的方案（通过客户端认证）</p>\n</blockquote>\n<p>WebPortal 认证原理</p>\n<blockquote>\n<p>1.PC 接入内网后，由 BAS 中继向 DHCP 服务器获取一个合法 ip<br />\n2.BAS 建立 ACL 策略，限制 PC 网络接入，仅可访问部分内网、portal server 和 DHCP server<br />\n3. 未认证前 PC 所有 http 请求都会被重定向到 portal server<br />\n4. 用户登录后 BAS 会向 AAA server 请求认证，合法后即更改 ACL 策略，PC 可接入公网<br />\n<img data-src=\"https://res.cloudinary.com/degnbzj9m/image/upload/v1636453531/Untitled_Diagram.drawio_hegvoc.png\" alt=\"流程图\" /></p>\n</blockquote>\n<blockquote>\n<p>参考：马燕、范植华 (2004) Web／Portal 认证技术研究</p>\n</blockquote>\n<hr />\n<h2 id=\"破解思路\"><a class=\"anchor\" href=\"#破解思路\">#</a> 破解思路</h2>\n<h3 id=\"通过dhcp-server入手即-udp53端口\"><a class=\"anchor\" href=\"#通过dhcp-server入手即-udp53端口\">#</a> 通过 DHCP server 入手，即 udp53 端口</h3>\n<h3 id=\"搭建softether-vpn\"><a class=\"anchor\" href=\"#搭建softether-vpn\">#</a> 搭建 softether VPN</h3>\n<blockquote>\n<p>优点：学校晚上断网后可用<br />\n缺点：传输效率低，仅 Windows 可绕过</p>\n</blockquote>\n<hr />\n<p>我这里选择的是 AWS 的 ec2 白嫖机子，JP 节点</p>\n<h4 id=\"搭建softether-server\"><a class=\"anchor\" href=\"#搭建softether-server\">#</a> 搭建 softether server</h4>\n<ul>\n<li>ssh 到 vps</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">wget</span> https://github.com/SoftEtherVPN/SoftEtherVPN_Stable/releases/download/v4.38-9760-rtm/softether-vpnserver-v4.38-9760-rtm-2021.08.17-linux-x64-64bit.tar.gz <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">tar</span> -zxvf *  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> vpnserver  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">make</span></pre></td></tr></table></figure><ul>\n<li>设置 server 端管理密码</li>\n</ul>\n<pre><code>sudo ./vpncmd\n</code></pre>\n<p>输入 <code>1</code> ，一直回车<br />\n输入 <code>ServerPasswordSet</code>  设置服务端管理员密码</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> ./vpnserver start</pre></td></tr></table></figure><ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc29mdGV0aGVyLWRvd25sb2FkLmNvbS9jbi5hc3B4P3Byb2R1Y3Q9c29mdGV0aGVy\">下载</span>服务端管理工具并安装<br />\n<img data-src=\"https://res.cloudinary.com/degnbzj9m/image/upload/v1636452863/p1_uzuf8k.png\" alt=\"示例\" /></li>\n<li>新建，输入 vps 的 ip 和刚才设置的密码登录<br />\n<img data-src=\"https://res.cloudinary.com/degnbzj9m/image/upload/v1636452862/p2_ct6ich.png\" alt=\"示例\" /></li>\n<li>创建 HUB，设置 HUB 名和密码<br />\n<img data-src=\"https://res.cloudinary.com/degnbzj9m/image/upload/v1636452862/p3_rvarjb.png\" alt=\"示例\" /></li>\n<li>管理虚拟 HUB→管理用户→新建，设置用户名和密码<br />\n<img data-src=\"https://res.cloudinary.com/degnbzj9m/image/upload/v1636452863/p4_wohepm.png\" alt=\"示例\" /></li>\n<li>启用 SecureNAT<br />\n<img data-src=\"https://res.cloudinary.com/degnbzj9m/image/upload/v1636452862/p5_qztbgq.png\" alt=\"示例\" /></li>\n<li>关键步骤：加密与网络→VPN over ICMP/DNS 设置→全部启用<br />\n<img data-src=\"https://res.cloudinary.com/degnbzj9m/image/upload/v1636452863/p6_gsgfwa.png\" alt=\"示例\" /><br />\n服务端的配置到这里结束了</li>\n<li>下载客户端 $ 连接<br />\n输入主机名 (vps 的 ip), 刚才创建的虚拟 HUB 名，用户和密码，连接即可<br />\n<img data-src=\"https://res.cloudinary.com/degnbzj9m/image/upload/v1636452863/p7_ukeggl.png\" alt=\"示例\" /></li>\n</ul>\n<hr />\n<h3 id=\"路由器curl认证\"><a class=\"anchor\" href=\"#路由器curl认证\">#</a> 路由器 curl 认证</h3>\n<blockquote>\n<p>优点：网速快，延迟低<br />\n缺点：连接不稳定，容易掉线</p>\n</blockquote>\n<hr />\n<blockquote>\n<ul>\n<li>首先你需要一台可以刷固件的路由器</li>\n<li>我用的红米 AC2100, 刷的 openwrt</li>\n</ul>\n</blockquote>\n<ul>\n<li>编译固件</li>\n</ul>\n<blockquote>\n<p>编译环境：Ubuntu20.04<br />\n 这里推荐<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ltbW9ydGFsd3J0L2ltbW9ydGFsd3J0LmdpdA==\"> ImmortalWrt</span> 项目<br />\n编译流程不多赘述，详细请看 ImmortalWrt 的 README<br />\n 需要注意的是有些设备需要手动勾选 curl, 位于 Network&gt;File Transfer</p>\n</blockquote>\n<ul>\n<li>抓包<br />\n 1. 进入认证界面，F12，选择网络<br />\n<img data-src=\"https://res.cloudinary.com/degnbzj9m/image/upload/v1636455700/p8_miuoip.png\" alt=\"示例\" /><br />\n 2. 登录，一个个翻，直到找到带有你账号密码的数据包<br />\n<img data-src=\"https://res.cloudinary.com/degnbzj9m/image/upload/v1636455701/p9_zybnip.png\" alt=\"示例\" /><br />\n 3. 右击，以 cURL 格式复制，先暂存到记事本<br />\n<img data-src=\"https://res.cloudinary.com/degnbzj9m/image/upload/v1636455704/p10_a73yzt.png\" alt=\"示例\" /><br />\n 4. 利用计划任务每分钟检测一次网络，实现掉线自动重连<br />\n创建文件 &quot;<span class=\"exturl\" data-url=\"aHR0cDovL25ldGxvZ2luLnNo\">netlogin.sh</span>&quot;</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">(</span>粘贴刚才复制的代码<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>创建文件 &quot;<span class=\"exturl\" data-url=\"aHR0cDovL25ldGNoZWNrLnNo\">netcheck.sh</span>&quot;</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/sh</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">PING</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">ping</span> -c <span class=\"token number\">5</span> www.baidu.com<span class=\"token operator\">|</span><span class=\"token function\">grep</span> -v <span class=\"token function\">grep</span><span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token string\">'64 bytes'</span> <span class=\"token operator\">|</span><span class=\"token function\">wc</span> -l<span class=\"token variable\">`</span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;PING&#125;</span> -ne <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    /bin/bash netlogin.sh</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">sleep</span> <span class=\"token number\">10</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token assign-left variable\">PING2</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">ping</span> -c <span class=\"token number\">5</span> www.baidu.com<span class=\"token operator\">|</span><span class=\"token function\">grep</span> -v <span class=\"token function\">grep</span><span class=\"token operator\">|</span><span class=\"token function\">grep</span> <span class=\"token string\">'64 bytes'</span> <span class=\"token operator\">|</span><span class=\"token function\">wc</span> -l<span class=\"token variable\">`</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$&#123;PING2&#125;</span> -ne <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    /bin/bash netlogin.sh</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><p>5. 将两个文件上传到路由器，openwrt 的计划任务中填入 <code>* * * * * sh &lt;path&gt;/netcheck.sh</code></p>\n<blockquote>\n<p>如果你的学校有检测机制，请自行谷歌<em>校园网多设备防检测</em><br />\n<s>幸好咱学校没</s></p>\n</blockquote>\n<h3 id=\"路由器认证drcomversion52d版\"><a class=\"anchor\" href=\"#路由器认证drcomversion52d版\">#</a> 路由器认证 Drcom（version5.2,D 版）</h3>\n<p>项目:</p>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RyY29tcy9kcmNvbS1nZW5lcmljLmdpdA==\">drcom-generic</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21jaG9tZS9vcGVud3J0LWRvZ2NvbS5naXQ=\">openwrt-dogcom</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21jaG9tZS9sdWNpLWFwcC1kb2djb20uZ2l0\">luci-app-dogcom</span><br />\n1. 将 dogcom 编译进 immortalwrt</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> clone -b openwrt-18.06-k5.4 https://github.com/immortalwrt/immortalwrt.git <span class=\"token operator\">&amp;&amp;</span> <span class=\"token builtin class-name\">cd</span> package  </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> clone https://github.com/mchome/openwrt-dogcom.git <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">git</span> clone https://github.com/mchome/luci-app-dogcom.git</pre></td></tr></table></figure><p>然后 <code>make menuconfig</code>  时在 luci&gt;Application 选中 dogcom 就行<br />\n dogcom 配置文件获取详见<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RyY29tcy9kcmNvbS1nZW5lcmljL3dpa2kvZCVFNyU4OSU4OCVFNyVBRSU4MCVFNyU5NSVBNSVFNCVCRCVCRiVFNyU5NCVBOCVFNSU5MiU4QyVFOSU4NSU4RCVFNyVCRCVBRSVFOCVBRiVCNCVFNiU5OCU4RQ==\"> wiki</span></p>\n<hr />\n<p>暂时就写这么多了，开学以来一直在想办法折腾校园网，学校竟然一直没有告知可以用 drcom 的客户端认证，我也是无意中摸索出来。<br />\n如果你有什么疑问。。<s>那我也没有办法</s>，我也菜死了</p>\n<p>感谢<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGluZXNvZnQudG9wLw==\">双霖</span>、<span class=\"exturl\" data-url=\"aHR0cHM6Ly94bi0tbTgwYS5tbC8=\">天灵</span>在我遇到困难时给予的帮助！！daisuki~</p>\n",
            "tags": [
                "学校",
                "网络",
                "破解"
            ]
        }
    ]
}